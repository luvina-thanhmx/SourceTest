JOB = [name:"Logstat.Logfile.CSVbyDateTest"]

FETCHACTION = {
	def shell = new GroovyShell()
	HashMap<String, Object> input_conf = new HashMap<String, Object>();
	HashMap<String, Object> output_conf = new HashMap<String, Object>();
	HashMap<String, Object> filter = new HashMap<String, Object>();
	HashMap<String, Object> conf = new HashMap<String, Object>();
	String wd = System.getProperty("felix.home");
	String logs_test_dir = wd + "/var/job/input/logfile/testCSV";
	def persistentFromDate = PERSISTENTDATA['from_date'] != null ? PERSISTENTDATA['from_date'] : "";
	def persistentStartFileName = PERSISTENTDATA['start_file_name'] != null ? PERSISTENTDATA['start_file_name'] : "";
	// filter data
	filter = [
			"filter_type" : "match_field",
			"filter_conf" : [
				"date" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}",
				"time" : "[0-9]{2}:[0-9]{2}:[0-9]{2}",
				"message" : '^.*$'
			]
		]
	// get data of plaintext
	input_conf.put("input_type", "file");
	if (persistentStartFileName != "") {
		input_conf.put("start_file_name", persistentStartFileName);
	} else {
		input_conf.put("start_file_name", "logfile03.csv");
	}
	input_conf.put("path", logs_test_dir);
	input_conf.put("file_format", "csv");
	input_conf.put("monitor_type", "date");
	input_conf.put("asc_by_fname", true);
	if(persistentFromDate != "") {
		input_conf.put("from_date", persistentFromDate);
	} else {
		input_conf.put("from_date", "2014-02-02");
	}
	// output data
	output_conf.put("type", "job");
	// map config
	conf.put("input",input_conf);
	conf.put("filter",filter);
	conf.put("output",output_conf);
	// run log stat
	def data = m.runLogStat(conf)
	data = data.replace("{", "[").replace("}", "]")
	def finalData = shell.evaluate(data)
	PERSISTENTDATA = finalData['persistent_data']
	return finalData
}

SENDTYPE = "Store"
RESOURCEID = "Logstat/CSVbyDate"
DEST = [[file:"stdout"]]
